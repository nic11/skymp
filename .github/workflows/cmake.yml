name: CMake

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release
  VCPKG_BINARY_SOURCES: 'clear;nuget,GitHub,readwrite'

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: ['ubuntu-latest']
        mono: ['mono']

    steps:
    - uses: actions/checkout@v2

    - uses: nuget/setup-nuget@v1
      with:
        nuget-version: '5.5.1'

    - run: ${{ matrix.mono }} nuget add source "https://nuget.pkg.github.com/skyrim-multiplayer/index.json" --username "GitHub" --password "${{ secrets.GITHUB_TOKEN }}" --store-password-in-clear-text
    

    #- name: 'Boostrap vcpkg'
    #  run: ./vcpkg/bootstrap-vcpkg

    # This step assumes `vcpkg` has been bootstrapped (run `./vcpkg/bootstrap-vcpkg`)
    #- name: 'Setup NuGet Credentials'
    #  shell: 'bash'
    #  run: >
    #    ${{ matrix.mono }} `vcpkg/vcpkg fetch nuget | tail -n 1`
    #    sources add
    #    -source "https://nuget.pkg.github.com/skyrim-multiplayer/index.json"
    #    -storepasswordincleartext
    #    -name "GitHub"
    #    -username "skyrim-multiplayer"
    #    -password "${{ secrets.GITHUB_TOKEN }}"

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
      
